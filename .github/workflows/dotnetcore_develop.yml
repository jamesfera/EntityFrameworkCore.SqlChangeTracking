name: .NET Core Develop

on:
  push:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:        
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.5.0'

      - name: Configure GitVersion
        shell: bash
        run: |
          echo "mode: Mainline" > GitVersion.yml
          echo "branches: {}" >> GitVersion.yml
          echo "ignore:" >> GitVersion.yml
          echo "  sha: []" >> GitVersion.yml

      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        # with:
        #   additionalArguments: '/showConfig'

      - name: Install NuGet client
        uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}
          nuget-version: '5.4'

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.100

      - name: Build with dotnet
        run: |
          dotnet tool install -g dotnet-setversion
          setversion -r $GITVERSION_FULLSEMVER
          dotnet build --configuration Release

      # - name: Test with dotnet
      #   run: |
      #     cd ./EntityFrameworkCore.SqlChangeTracking.Tests/
      #     dotnet add package coverlet.msbuild
      #     dotnet test --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=lcov --no-build

      # - name: Publish coverage report to coveralls.io
      #   uses: coverallsapp/github-action@v1.0.1
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     path-to-lcov: ./EntityFrameworkCore.SqlChangeTracking.Tests/coverage.info   

      - name: Create nuget package
        run: dotnet pack --configuration Release -o . -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -p:PublishRepositoryUrl=true -p:EmbedUntrackedSources=true --no-build

      - name: Push to GitHub NuGet
        run: nuget push **/*.nupkg -Source "GPR" -ApiKey ${{ secrets.GITHUB_TOKEN }}

      