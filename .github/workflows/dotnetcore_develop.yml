name: .NET Core Develop

on:
  push:
    branches: [ develop ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:        
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install NuGet client
      uses: nuget/setup-nuget@v1
      with:
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
        nuget-version: '5.4'
    - name: Set version
      run: |
        echo mode: Mainline > GitVersion.yml && echo branches: {} >> GitVersion.yml && echo ignore: >> GitVersion.yml && echo   sha: [] >> GitVersion.yml
        dotnet tool install -g dotnet-setversion && dotnet tool install -g GitVersion.Tool
        git fetch --no-tags --prune origin +refs/heads/master:refs/remotes/origin/master
        dotnet-gitversion -showvariable NugetVersionV2
        setversion -r $(dotnet-gitversion -showvariable NugetVersionV2)
    - name: Build with dotnet
      run: |
        nuget sources add -name "GPR" -Source https://nuget.pkg.github.com/jamesfera/index.json -Username jamesfera -Password ${{ secrets.GITHUB_GPR_KEY }} -StorePasswordInClearText
        dotnet add ./EntityFrameworkCore.SqlChangeTracking/ package Microsoft.SourceLink.GitHub
        dotnet build --configuration Release
    - name: Test with dotnet
      run: |
        cd ./EntityFrameworkCore.SqlChangeTracking.Tests/
        dotnet add package coverlet.msbuild
        dotnet test --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=lcov --no-build
    - name: Publish coverage report to coveralls.io
      uses: coverallsapp/github-action@v1.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./EntityFrameworkCore.SqlChangeTracking.Tests/coverage.info   
    - name: Create nuget package
      run: dotnet pack --configuration Release -o . -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -p:PublishRepositoryUrl=true -p:EmbedUntrackedSources=true --no-build
    - name: Push to GitHub NuGet
      run: nuget push **/*.nupkg -Source "GPR" -ApiKey ${{ secrets.GITHUB_TOKEN }}

      